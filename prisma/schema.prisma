// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int        @id @default(autoincrement())
  email           String     @unique
  name            String
  username        String
  password        String
  description     String
  verified        Boolean?   @default(false)
  followers       Int?
  following       Int?
  posts           Post[]
  display_picture String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  comments        Comments[]
  like            Like[]
}

model Post {
  id        Int        @id @default(autoincrement())
  title     String
  content   String
  image     String[]
  published Boolean    @default(false)
  authorId  Int
  author    User       @relation(fields: [authorId], references: [id])
  comments  Comments[]
  like      Like[] // Add this relation
  likeCount Int        @default(0) // Add this for quick counting
}

model Like {
  id        Int      @id @default(autoincrement())
  userId    Int
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model Comments {
  id        Int      @id @default(autoincrement())
  message   String
  replies   String[]
  userId    Int
  postId    Int
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
